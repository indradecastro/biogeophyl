\name{clean.sisters}
\alias{clean.sisters}
%- Also NEED an '\alias' for EACH other topic documented here.
\title{
bla bla bla
}
\description{
%%  ~~ A concise (1-5 lines) description of what the function does. ~~
}
\usage{
clean.sisters(sisters, mytrees)
}
%- maybe also 'usage' for other objects documented here.
\arguments{
  \item{sisters}{
%%     ~~Describe \code{sisters} here~~
}
  \item{mytrees}{
%%     ~~Describe \code{mytrees} here~~
}
}
\details{
%%  ~~ If necessary, more details than the description above ~~
}
\value{
%%  ~Describe the value returned
%%  If it is a LIST, use
%%  \item{comp1 }{Description of 'comp1'}
%%  \item{comp2 }{Description of 'comp2'}
%% ...
}
\references{
%% ~put references to the literature/web site here ~
}
\author{
%%  ~~who you are~~
}
\note{
%%  ~~further notes~~
}

%% ~Make other sections like Warning with \section{Warning }{....} ~

\seealso{
%% ~~objects to See Also as \code{\link{help}}, ~~~
}
\examples{
##---- Should be DIRECTLY executable !! ----
##-- ==>  Define data, use random,
##--	or do  help(data=index)  for the standard data sets.

## The function is currently defined as
function (sisters, mytrees) 
{
    onetree <- if (length(mytrees) > 1) {
        mytrees[[1]]
    }
    else {
        mytrees
    }
    missing <- as.character(unlist(sisters))[!as.character(unlist(sisters)) \%in\% 
        onetree$tip.label]
    if (length(missing != 0)) {
        cat("\nsome of the sister species were missing in the trees", 
            "the were REMOVED from the list:", missing, "\n", 
            sep = "\n")
    }
    else {
        cat("Perfect, all sisters present in tree!\n")
    }
    present <- as.character(unlist(sisters))[as.character(unlist(sisters)) \%in\% 
        onetree$tip.label]
    clean.sisters <- lapply(sisters, function(x) {
        unlist(x)[as.character(unlist(x)) \%in\% mytrees[[1]]$tip.label]
    })
    rm.desloc.sps <- names(clean.sisters)[sapply(clean.sisters, 
        length) == 0]
    if (length(rm.desloc.sps != 0)) {
        cat("\nsome of the unsequenced species have no sisters left", 
            "they are impossible to fit into the trees", "the were REMOVED from the list:", 
            rm.desloc.sps, "\n", sep = "\n")
    }
    else {
        cat("Perfect, all unsequenced species have at least one sister!\n")
    }
    clean.sisters <- clean.sisters[sapply(clean.sisters, length) != 
        0]
    return(clean.sisters)
  }
}
% Add one or more standard keywords, see file 'KEYWORDS' in the
% R documentation directory.
\keyword{ ~kwd1 }
\keyword{ ~kwd2 }% __ONLY ONE__ keyword per line
